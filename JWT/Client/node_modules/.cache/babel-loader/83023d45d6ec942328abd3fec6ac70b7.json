{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishit.Parikh\\\\Downloads\\\\React Training\\\\JWT\\\\client\\\\src\\\\app\\\\components\\\\AppNavbar.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavbarText, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport AuthenticationService from '../services/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AppNavbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.signOut = () => {\n      AuthenticationService.signOut();\n      this.props.history.push('/home');\n      window.location.reload();\n    };\n\n    this.state = {\n      isOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      showUser: false,\n      showPM: false,\n      showAdmin: false,\n      username: undefined,\n      login: false\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthenticationService.getCurrentUser();\n    con;\n\n    if (user) {\n      const roles = []; // user.authorities.forEach(authority => {\n      //   roles.push(authority.authority)\n      // });\n\n      this.setState({\n        showUser: true,\n        showPM: roles.includes(\"ROLE_PM\") || roles.includes(\"ROLE_ADMIN\"),\n        showAdmin: roles.includes(\"ROLE_ADMIN\"),\n        login: true,\n        username: user.username\n      });\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      color: \"dark\",\n      dark: true,\n      expand: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        className: \"mr-auto\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          href: \"/home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), this.state.showUser && /*#__PURE__*/_jsxDEV(NavLink, {\n          href: \"/user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this), this.state.showPM && /*#__PURE__*/_jsxDEV(NavLink, {\n          href: \"/pm\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }, this), this.state.showAdmin && /*#__PURE__*/_jsxDEV(NavLink, {\n          href: \"/admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n        onClick: this.toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        children: this.state.login ? /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ml-auto\",\n          navbar: true,\n          children: [/*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavbarText, {\n              children: [\"Signed in as: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/profile\",\n                children: this.state.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"#\",\n              onClick: this.signOut,\n              children: \"SignOut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ml-auto\",\n          navbar: true,\n          children: [/*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"/signin\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"/signup\",\n              children: \"SignUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(AppNavbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Rishit.Parikh/Downloads/React Training/JWT/client/src/app/components/AppNavbar.js"],"names":["React","Component","Collapse","Nav","Navbar","NavbarBrand","NavbarToggler","NavbarText","NavItem","NavLink","Link","withRouter","AuthenticationService","AppNavbar","constructor","props","signOut","history","push","window","location","reload","state","isOpen","toggle","bind","showUser","showPM","showAdmin","username","undefined","login","componentDidMount","user","getCurrentUser","con","roles","setState","includes","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavbarText, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport { withRouter } from 'react-router-dom';\n\nimport AuthenticationService from '../services/AuthenticationService';\n\nclass AppNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {isOpen: false};\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      showUser: false,\n      showPM: false,\n      showAdmin: false,\n      username: undefined,\n      login: false\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthenticationService.getCurrentUser();\n    con\n    if (user) {\n      const roles = [];\n\n      // user.authorities.forEach(authority => {\n      //   roles.push(authority.authority)\n      // });\n  \n      this.setState({\n        showUser: true,\n        showPM: roles.includes(\"ROLE_PM\") || roles.includes(\"ROLE_ADMIN\"),\n        showAdmin: roles.includes(\"ROLE_ADMIN\"),\n        login: true,\n        username: user.username\n      });\n    }\n  }\n\n  signOut = () => {\n    AuthenticationService.signOut();\n    this.props.history.push('/home');\n    window.location.reload();\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return <Navbar color=\"dark\" dark expand=\"md\">\n      <Nav className=\"mr-auto\">\n        <NavLink href=\"/home\">Home</NavLink>\n        {this.state.showUser && <NavLink href=\"/user\">User</NavLink>}\n        {this.state.showPM && <NavLink href=\"/pm\">PM</NavLink>}\n        {this.state.showAdmin && <NavLink href=\"/admin\">Admin</NavLink>}\n      </Nav>\n      <NavbarToggler onClick={this.toggle}/>\n      <Collapse isOpen={this.state.isOpen} navbar>\n        {\n          this.state.login ? (\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                  <NavbarText>\n                    Signed in as: <a href=\"/profile\">{this.state.username}</a>\n                  </NavbarText>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\" onClick={this.signOut}>SignOut</NavLink>\n              </NavItem>\n            </Nav>                 \n          ) : (\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/signin\">Login</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/signup\">SignUp</NavLink>\n              </NavItem>\n            </Nav>\n          )\n        }\n      </Collapse>\n    </Navbar>;\n  }\n}\n\nexport default withRouter(AppNavbar);"]},"metadata":{},"sourceType":"module"}